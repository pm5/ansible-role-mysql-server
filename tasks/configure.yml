---

# Configure mysql-server

- name: stat datadir exists
  become : yes
  stat:
    path : "{{ mysqlserver_mysqld_datadir }}"
  register: mysqlserver_datadir_stat


- name : create binary logs directory
  become : yes
  file :
    path  : "{{ mysqlserver_mysqld_log_bin | dirname }}"
    group : "{{ mysqlserver_group }}"
    owner : "{{ mysqlserver_owner }}"
    state : directory
    mode  : 0750


- name : stop mysql if datadir move is needed
  become : yes
  service :
    name  : "{{ mysqlserver_service_name }}"
    state : stopped
  when : not mysqlserver_datadir_stat.stat.exists


- name : get current datadir configuration
  become : yes
  command       : "grep -E '[^#]?datadir' {{ mysqlserver_config_file_location }}"
  ignore_errors : yes
  register      : mysqlserver_current_datadir
  when : not mysqlserver_datadir_stat.stat.exists


- name : move mysql data to data disk
  become : yes
  become_user : "{{ mysqlserver_owner }}"
  command : "mv {{ mysqlserver_current_datadir.stdout.split('=')[1] | trim }} {{ mysqlserver_mysqld_datadir }}"
  when : not mysqlserver_datadir_stat.stat.exists


- name : generate custom role config file
  become   : yes
  template :
    src   : "{{ item }}"
    dest  : "{{ mysqlserver_config_file_location }}"
    group : root
    owner : root
    mode  : 0644
  with_first_found :
    - "{{ inventory_dir }}/templates/mysql-server/my.cnf_{{ mysqlserver_version }}.j2"
    - "{{ inventory_dir }}/templates/mysql-server/my.cnf.j2"
    - "{{ role_path }}/templates/my.cnf_{{ mysqlserver_version }}.j2"
    - "{{ role_path }}/templates/my.cnf.j2"
  notify :
    - restart mysql

- name : generate logrotate configuration
  become  : yes
  template :
    src   : "{{ item }}"
    dest  : /etc/logrotate.d/mysql-server
    group : root
    owner : root
    mode  : 0600
  with_first_found :
    - "{{ inventory_dir }}/templates/mysql-server/logrotate_mysql"
    - "{{ role_path }}/templates/logrotate_mysql.j2"


- name : enable mysql service on boot
  become  : yes
  service :
    name    : "{{ mysqlserver_service_name }}"
    enabled : "{{ mysqlserver_service_enabled }}"
    state   : "{{ mysqlserver_service_state }}"

