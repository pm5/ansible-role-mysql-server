---

# Manage DB users

- name : check if root password need to be changed
  register : mysqlserver_check_old_password
  mysql_variables :
    login_host     : "127.0.0.1"
    login_user     : root
    login_password : "{{ mysqlserver_root_db_old_password }}"
    variable       : max_connections
  changed_when  : no
  ignore_errors : yes
  when : mysqlserver_root_db_password != mysqlserver_root_db_old_password


- name : update mysql root password for all localhost root accounts
  mysql_user :
    name     : root
    host     : "{{ item }}"
    password : "{{ mysqlserver_root_db_password }}"
    login_user     : root
    login_password : "{{ mysqlserver_root_db_old_password }}"
    check_implicit_admin : yes
  when :
    - mysqlserver_root_db_password != mysqlserver_root_db_old_password
    - mysqlserver_check_old_password.failed is not defined
  with_items:
    - 127.0.0.1
    - ::1
    - localhost


- name : update mysql root password for hostname root account
  mysql_user :
    name     : root
    host     : "{{ ansible_hostname }}"
    password : "{{ mysqlserver_root_db_password }}"
    login_user     : root
    login_password : "{{ mysqlserver_root_db_password }}"
    check_implicit_admin : yes
  when :
    - mysqlserver_root_db_password != mysqlserver_root_db_old_password
    - mysqlserver_check_old_password.failed is not defined


- name : manage mysql global accounts
  mysql_user :
    name     : "{{ item.name }}"
    host     : "{{ item.host }}"
    password : "{{ item.password }}"
    state    : "{{ item.state }}"
    priv     : "{{ item.privileges | join('/') }}"
    login_user     : root
    login_password : "{{ mysqlserver_root_db_password }}"
  with_items :
    - "{{ mysqlserver_global_accounts }}"
    - "{{ mysqlserver_additionnal_accounts }}"


- name : generate credentials files for global accounts
  template :
    src   : "{{ role_path }}/templates/my_credentials.cnf.j2"
    dest  : "{{ item.1.path }}"
    owner : "{{ item.1.owner }}"
    group : "{{ item.1.group }}"
    mode  : "{{ item.1.mode }}"
  with_subelements :
    - mysqlserver_global_accounts
    - files


- name : generate credentials files for additionnal accounts
  template :
    src   : "{{ role_path }}/templates/my_credentials.cnf.j2"
    dest  : "{{ item.1.path }}"
    owner : "{{ item.1.owner }}"
    group : "{{ item.1.group }}"
    mode  : "{{ item.1.mode }}"
  with_subelements :
    - mysqlserver_additionnal_accounts
    - files

